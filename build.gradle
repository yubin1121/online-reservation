plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java-library'
}

bootJar.enabled = false
jar.enabled = true

allprojects {
    group = 'kr.co.module'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}



subprojects {
    // subprojects 블록 안에서는 plugins 블록을 사용할 수 없어, 플러그인 등록을 위해서는 apply plugin 을 사용해야한다.
    // setting.gradle에서 include된 모든 프로젝트에 공통적으로 적용할 설정
    apply plugin: 'java'
    // build.gradle 에서 api() 를 사용하려면 java-library 플러그인을 적용해야한다.
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    // spring boot dependency 플러그인을 적용하여 사용중인 부트 버전에서 자동으로 의존성을 가져온다.
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // 관리하는 모듈에 공통 dependencies
    dependencies {
        implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
        runtimeOnly 'com.mysql:mysql-connector-j'
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.modelmapper:modelmapper:2.4.2'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
